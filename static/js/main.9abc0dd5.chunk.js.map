{"version":3,"sources":["components/school-sidebar-display.js","components/discliamer.js","components/sidebar.js","components/school-map-display.js","components/map.js","App.js","serviceWorker.js","index.js"],"names":["SchoolSidebarDisplay","_this$props$school$pr","this","props","school","properties","campus","_this$props$school$pr2","address","street","zipCode","phoneNumber","react_default","a","createElement","Component","Discliamer","className","href","title","target","rel","Sidebar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","toggleSidebar","bind","assertThisInitialized","handleChange","_this$props","showSidebar","searchValue","discliamer","onClick","type","list","value","onChange","map","school_sidebar_display","key","id","SchoolMapDisplay","esm","latitude","geometry","coordinates","longitude","src","alt","Map","objectSpread","_this2","_this$state","API_KEY","viewport","schools","assign","mapboxApiAccessToken","onViewportChange","setState","school_map_display","App","event","prevState","width","height","zoom","toConsumableArray","data","features","regex","RegExp","toLowerCase","results","length","filter","test","sidebar","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9abc0dd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SchoolSidebarDisplay extends Component {\r\n    render() {\r\n        const {properties: {campus, address: {street, zipCode}, phoneNumber}} = this.props.school;\r\n\r\n        return (\r\n            <li>\r\n                <h3>{campus}</h3>\r\n                <p>{street}</p>\r\n                <p>{zipCode === \"75569\" ? \"Nash\" : \"Texarkana\"}, TX {zipCode}</p>\r\n                <p>{phoneNumber}</p>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SchoolSidebarDisplay;","import React, { Component } from 'react';\r\n\r\nclass Discliamer extends Component {\r\n    render() {\r\n        return (                       \r\n            <div className=\"disclaimer\">\r\n                Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\"                 title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\"                 title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\" >CC 3.0 BY</a>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Discliamer;","import React, { Component } from 'react';\r\nimport SchoolSidebarDisplay from './school-sidebar-display';\r\nimport Disclaimer from './discliamer';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchResults: []\r\n        }\r\n        this.toggleSidebar = props.toggleSidebar.bind(this)      \r\n        this.handleChange = props.handleChange.bind(this)\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {showSidebar, searchResults, searchValue} = this.props;\r\n\r\n        return (\r\n            <div className={showSidebar ? \"sidebar shown\" : \"sidebar hidden\"}>     \r\n                <Disclaimer />\r\n                <button className=\"sidebar-btn\"\r\n                        onClick={this.toggleSidebar}\r\n                >X</button>\r\n                <input type=\"text\" \r\n                    className=\"searchbox\" \r\n                    list=\"keywords\"\r\n                    value={searchValue}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <ul className=\"school-list\">\r\n                    {searchResults.map(school => \r\n                        <SchoolSidebarDisplay school={school} key={school.id}/>\r\n                    )}\r\n                </ul>        \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport {Marker} from 'react-map-gl';\r\n\r\n\r\nclass SchoolMapDisplay extends Component {\r\n    render() {\r\n        const {school} = this.props;\r\n        return (\r\n            <Marker key={school.id} \r\n                latitude={school.geometry.coordinates[1]}\r\n                longitude={school.geometry.coordinates[0]}                    \r\n            >\r\n                    <img src=\"https://raw.githubusercontent.com/arhillis/mapbox-schools/master/public/graduation-hat.png\" \r\n                        alt=\"graduation hat\" \r\n                        className=\"marker-icon\"\r\n                    />\r\n                    <span className=\"marker-label\">\r\n                        {school.properties.campus}\r\n                    </span>\r\n            </Marker>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SchoolMapDisplay;","import React, { Component } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport SchoolMapDisplay from './school-map-display';\r\n\r\nclass Map extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {...props}\r\n    }\r\n\r\n    render() {\r\n        const {API_KEY, viewport} = this.state;\r\n        const {schools} = this.props;\r\n        \r\n        return (\r\n            <div className=\"map\">\r\n                <ReactMapGL\r\n                mapboxApiAccessToken={API_KEY}\r\n                {...viewport}\r\n                onViewportChange={(viewport) => this.setState({viewport})}\r\n                >\r\n                {schools.map((school) =>\r\n                    <SchoolMapDisplay school={school} key={school.id} />\r\n                )}\r\n                </ReactMapGL>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport './App.css';\r\nimport data from './features.geojson-2.json';\r\n\r\nimport Sidebar from './components/sidebar';\r\nimport Map from './components/map';\r\n\r\nclass App extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      showSidebar: false,\r\n      viewport: {\r\n        width: 700,\r\n        height: 700,\r\n        latitude: 33.43,\r\n        longitude: -94.05,\r\n        zoom: 11.5\r\n      },\r\n      schools: [...data.features],\r\n      searchValue: \"\",\r\n      API_KEY: 'pk.eyJ1IjoiYW5kcmllbGxlaCIsImEiOiJjanl1cm96bGIwNDkwM21taXhwdzI4YTh1In0.h4LtxhhhtJFzWbBAwSAtrg'\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({searchValue: event.target.value})\r\n  }\r\n\r\n  toggleSidebar = () =>{\r\n    this.setState(prevState => {\r\n        return {showSidebar: !prevState.showSidebar}\r\n    })\r\n  }  \r\n\r\n  render() {\r\n    const {API_KEY, viewport, schools, searchValue} = this.state;   \r\n\r\n    const regex = new RegExp(searchValue.toLowerCase()) ;\r\n    const results = searchValue.length === 0 ? schools : schools.filter(school => regex.test(school.properties.campus.toLowerCase()));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Sidebar \r\n          searchResults={results}\r\n          showSidebar={this.state.showSidebar}\r\n          toggleSidebar={this.toggleSidebar}\r\n          searchValue={searchValue}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <Map API_KEY={API_KEY}\r\n          viewport={{...viewport}}\r\n          schools={[...results]}\r\n        />        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}